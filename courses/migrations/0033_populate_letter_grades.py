# Generated by Django 3.2.18 on 2023-06-22 19:54
import datetime

import pytz
from django.db import migrations

from courses.models import Program


def convert_to_letter(grade):
    """Convert a decimal number to letter grade"""
    grade = round(grade, 1)
    if grade >= 0.825:
        return "A"
    elif grade >= 0.65:
        return "B"
    elif grade >= 0.55:
        return "C"
    elif grade >= 0.50:
        return "D"
    else:
        return "F"


def populate_letter_grade(apps, schema_editor):
    """Populate the letter grade with A/B/C/D for the DEDP courses prior to 3T2022"""
    CourseRunGrade = apps.get_model("courses", "CourseRunGrade")

    dedp_program = Program.objects.filter(readable_id="program-v1:MITx+DEDP").first()

    if dedp_program is not None:
        dedp_course_ids = [course[0].id for course in dedp_program.courses]
    else:
        dedp_course_ids = []

    grades = CourseRunGrade.objects.filter(
        passed=True,
        letter_grade__contains="Pass",
        course_run__course_id__in=dedp_course_ids,
        course_run__start_date__lt=datetime.datetime(2022, 9, 1, tzinfo=pytz.UTC),
    )
    for grade in grades:
        grade.letter_grade = convert_to_letter(grade.grade)
        grade.set_by_admin = True
        grade.save()


class Migration(migrations.Migration):
    dependencies = [
        ("courses", "0032_add_related_programs_table"),
        ("courses", "0032_program_program_type"),
    ]

    operations = [
        migrations.RunPython(populate_letter_grade, migrations.RunPython.noop),
    ]
