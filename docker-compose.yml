version: '3.7'

x-environment:
  &py-environment
  DEBUG: 'False'
  NODE_ENV: 'production'
  DEV_ENV: 'True'  # necessary to have nginx connect to web container
  SECRET_KEY: local_unsafe_key
  DATABASE_URL: postgres://postgres@db:5432/postgres
  MITX_ONLINE_BASE_URL: ${MITX_ONLINE_BASE_URL:-http://mitxonline.odl.local:8013}
  MITX_ONLINE_SECURE_SSL_REDIRECT: 'False'
  MITX_ONLINE_DB_DISABLE_SSL: 'True'
  MITX_ONLINE_ADMIN_EMAIL: admin@localhost
  ELASTICSEARCH_URL: elastic:9200
  CELERY_TASK_ALWAYS_EAGER: 'False'
  REDIS_URL: redis://redis:6379/4
  DOCKER_HOST: ${DOCKER_HOST:-missing}
  WEBPACK_DEV_SERVER_HOST: ${WEBPACK_DEV_SERVER_HOST:-localhost}
  WEBPACK_DEV_SERVER_PORT: ${WEBPACK_DEV_SERVER_PORT:-8012}
  OPENEDX_API_KEY: ${OPENEDX_API_KEY:-PUT_YOUR_API_KEY_HERE}

x-extra-hosts:
  &default-extra-hosts
  - "edx.odl.local:${OPENEDX_IP:-172.22.0.1}"
  - "host.docker.internal:host-gateway"

services:
  db:
    image: postgres:11.6
    ports:
      - "5432"
    networks:
      - default

  redis:
    image: redis:6.0.5
    ports:
      - "6379"

  nginx:
    image: nginx:1.21
    ports:
      - "8013:8013"
    links:
      - web
    networks:
      default:
        aliases:
          # this ensures that containers route this hostname back to the web app
          - "mitxonline.odl.local"
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      /bin/bash -c '
      sleep 3 &&
      python3 manage.py collectstatic --noinput &&
      python3 manage.py migrate --noinput &&
      python3 manage.py configure_wagtail &&
      uwsgi uwsgi.ini --honour-stdin'
    stdin_open: true
    tty: true
    ports:
      - "8011:8011"
    environment:
      << : *py-environment
      PORT: 8011
    env_file: .env
    links:
      - db
      - redis
    extra_hosts: *default-extra-hosts
    networks:
      - default

  watch:
    image: node:15.14.0
    working_dir: /src
    command: >
      /bin/bash -c './webpack_dev_server.sh --install'
    ports:
      - "8012:8012"
    environment:
      NODE_ENV: 'production'
      DOCKER_HOST: ${DOCKER_HOST:-missing}
      CONTAINER_NAME: 'watch'
    env_file: .env

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    environment: *py-environment
    env_file: .env
    command: >
      /bin/bash -c '
      sleep 3;
      celery -A main.celery:app worker -B -l ${MITX_ONLINE_LOG_LEVEL:-INFO}'
    links:
      - db
      - redis
    extra_hosts: *default-extra-hosts

networks:
  default:
    external:
      # set OPENEDX_DOCKER_NETWORK in .env to devstack_default to integrate openedx
      name: ${OPENEDX_DOCKER_NETWORK:-none}
